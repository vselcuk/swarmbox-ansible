---

- name: Install pip
  apt: name=python-pip state=present

- name: Install docker-py as a workaround for Ansible issue
  pip: name=docker-py version=1.6.0

- name: Install Consul on the master node
  when: swarm_master is defined
  docker:
    name: consul
    image: progrium/consul
    state: started
    pull: missing
    restart_policy: always
    detach: true
    expose:
      - "53"
      - "8301"
      - "8302"
      - "8400"
      - "8500"
    ports:
      - "53:53"
      - "53:53/udp"
      - "8301:8301"
      - "8301:8301/udp"
      - "8302:8302"
      - "8302:8302/udp"
      - "8400:8400"
      - "8500:8500"
    command: -server -bootstrap -advertise {{ ansible_default_ipv4.address }} -ui-dir /ui

- name: Run swarm agent master
  when: swarm_master is defined
  docker:
    name: swarm-agent-master
    image: swarm:latest
    state: started
    expose: "{{ smarm_master_port }}"
    ports:
    - "{{ smarm_master_port }}:{{ smarm_master_port }}"
    pull: missing
    restart_policy: always
    detach: true
    volumes:
      - /etc/docker:/etc/docker
      - /etc/hosts:/etc/hosts
    command: >
      manage
        --tlsverify
        --tlscacert=/etc/docker/ca.pem
        --tlscert=/etc/docker/server.pem
        --tlskey=/etc/docker/server-key.pem
        --strategy spread
        -H tcp://0.0.0.0:{{ smarm_master_port }}
        consul://{{ swarm_master_node.hostname }}:8500/

- name: Run swarm agent
  docker:
    name: 'swarm-agent-{{ hostname }}'
    image: swarm:latest
    restart_policy: always
    state: started
    pull: missing
    detach: true
    volumes:
      - /etc/hosts:/etc/hosts
    command: >
      join
        --advertise={{ hostname }}:2376
        consul://{{ swarm_master_node.hostname }}:8500/


### Overlay network for service discovery

- name: Inspect the service discovery network overlay
  shell: docker network inspect {{ service_discovery_network_name }}
  when: swarm_master is defined
  register: service_discovery_network
  ignore_errors: True

- name: Create overlay network for the service discovery
  shell: docker network create -d overlay {{ service_discovery_network_name }}
  when: service_discovery_network.failed == true and swarm_master is defined

- name: Connect the consul container to the service discovery network
  shell: docker network connect {{ service_discovery_network_name }} consul
  when: swarm_master is defined
  ignore_errors: True


### Install the registrator so services are registred in consul

- name: Run registrator
  docker:
    name: 'registrator-{{ hostname }}'
    image: sourcestream/registrator
    restart_policy: always
    state: started
    pull: missing
    detach: true
    net: "{{ service_discovery_network_name }}"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: >
      -internal consul://consul.{{ service_discovery_network_name }}:8500
